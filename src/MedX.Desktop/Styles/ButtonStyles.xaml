<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" 
                            Background="#FEBB40"
                            CornerRadius="25"
                            BorderThickness="1"
                            BorderBrush="#D9A235">
                        <!--<Path Fill="#9A5712" Data="{DynamicResource minimize}" Height="2" Width="10" Stretch="UniformToFill"/>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#E0A538"/>
                            <Setter TargetName="B" Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="B" Property="Background" Value="#C28F31"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaximizeButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" 
                            Background="#33C848"
                            CornerRadius="25"
                            BorderThickness="1"
                            BorderBrush="#2DAA39">
                        <!--<Path Fill="#0B650E" Data="{DynamicResource maximize}" Height="8" Width="8" Stretch="UniformToFill"/>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="B" Property="Background" Value="#2BAA3C"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="B" Property="Background" Value="#248C32"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="B" 
                            Background="#FA5653"
                            CornerRadius="25"
                            BorderThickness="1"
                            BorderBrush="#DD4646">
                        <!--<Path Fill="#7D0409" Data="{DynamicResource close}" Height="7" Width="7" Stretch="UniformToFill"/>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="B" Property="Background" Value="#DF4D4A"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="B" Property="Background" Value="#C14240"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButton" TargetType="RadioButton">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="0 8 0 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="B"
                            CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Indicator" Grid.Column="0"
                                    Visibility="Collapsed"
                                    Background="{DynamicResource SelectedBorderColor}"
                                    Height="8"
                                    Width="8"
                                    Margin="2 0 0 0"
                                    CornerRadius="5"/>
                            <Path x:Name="icon"
                                  Grid.Column="1"
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                  Fill="{DynamicResource PrimaryForeground}"
                                  Height="20"
                                  Width="20"
                                  Stretch="Uniform"/>

                            <TextBlock x:Name="tb"
                                       Grid.Column="2"
                                       Text="{TemplateBinding Content}"
                                       FontFamily="Segoi UI"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource PrimaryForeground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource SelectedBorderColor}"/>
                            <Setter TargetName="B" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource Selectedbackground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="B" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="B" Property="Style" Value="{DynamicResource PrimaryBorder}"/>
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource Selectedbackground}"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NightModeButton" TargetType="ToggleButton">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="0 8 0 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="B"
                        CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Path x:Name="icon"
                              Grid.Column="1"
                              Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"
                              Fill="{DynamicResource PrimaryForeground}"
                              Height="20"
                              Width="20"
                              Stretch="Uniform"/>

                            <TextBlock x:Name="tb"
                                   Grid.Column="2"
                                   Text="{TemplateBinding Content}"
                                   FontFamily="Segoi UI"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource PrimaryForeground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource SelectedBorderColor}"/>
                            <Setter TargetName="B" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="B" Property="Background" Value="{DynamicResource Selectedbackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SuccesssButton" TargetType="Button">
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="B"
                            Style="{DynamicResource PrimaryBorder}"
                            Background="#05C880">
                        <Label FontSize="16"
                               Margin="25 0"
                               FontFamily="jetbrains mono"
                               FontWeight="SemiBold"
                               Foreground="snow"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#04AA6D"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#038C5A"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SwitchButton" TargetType="Button">
        <Setter Property="Margin" Value="0 0 160 0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="B"
            Style="{DynamicResource PrimaryBorder}"
            Background="#05C880">
                        <Label FontSize="16"
               Margin="25 0"
               FontFamily="jetbrains mono"
               FontWeight="SemiBold"
               Foreground="snow"
               VerticalAlignment="Center"
               HorizontalAlignment="Center"
               Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#04AA6D"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#038C5A"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddItemSelectImageButton" TargetType="Button">
        <Setter Property="Height" Value="140"/>
        <Setter Property="Width" Value="140"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="B" CornerRadius="5">
                        <Border.Resources>
                            <Style TargetType="Border">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="Black" BlurRadius="30" Opacity="0.2"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush x:Name="ImbBImage" 
                                                    ImageSource="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Stretch="UniformToFill"/>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Border.Resources>
                        <Grid x:Name="TargetText" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="1" 
                                    Background="Black" 
                                    CornerRadius="5" 
                                    Opacity="0.5">
                                <TextBlock x:Name="tb" 
                                           Grid.Column="2" 
                                           Text="{TemplateBinding Content}" 
                                           FontFamily="Segoi UI" 
                                           VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           Opacity="1" Foreground="{DynamicResource SecondaryForeground}"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="TargetText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="EditButtonBorder"
                        CornerRadius="90"
                            BorderBrush="{DynamicResource PrimaryBackground}"
                               BorderThickness="0">
                        <Path x:Name="icon"                                  
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                  Height="30" Width="15"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{DynamicResource PrimaryForeground}"                                  
                                  Stretch="Uniform"/>

                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="EditButtonBorder" Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="EditButtonBorder" Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="EditButtonBorder" Property="Background" Value="#BBBBBB"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="EditButtonBorder" Property="Background" Value="{DynamicResource PrimaryBackground}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="View_Profile2" TargetType="Button">
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="CreateButtonBorder"
                    CornerRadius="5"
                        BorderBrush="{DynamicResource PrimaryBackground}"
                           BorderThickness="1"
                            Width="150"
                        Height="30"
                        >
                        <Label x:Name="Createlbl"
                           FontSize="16"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"                               
                           Padding="0"
                           Content="{TemplateBinding Content}">
                        </Label>

                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CreateButtonBorder" Property="Cursor" Value="Hand" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="CreateButtonBorder" Property="Background" Value="{DynamicResource SecondaryBackground}"/>
                            <Setter TargetName="Createlbl" Property="Foreground" Value="{DynamicResource SecondaryBorder}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CreateButtonBorder" Property="Background" Value="{DynamicResource PrimaryBackground}"/>
                            <Setter TargetName="Createlbl" Property="Foreground" Value="{DynamicResource SecondaryBorder}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CreateButtonBorder" Property="Background" Value="{DynamicResource SecondaryBorder}"/>
                            <Setter TargetName="Createlbl" Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>